openapi: 3.0.1
info:
  version: '{{version}}'
  title: Link API
servers:
  - url: {{server-base-url}}
    description: This server
security:
  - oauth: []
tags:
  - name: API Root
    description: The root endpoint of the API
paths:
  /api:
    get:
      tags:
        - API Root
      summary: Gets version information about this installation of Link's API
      operationId: getVersionInfo
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                type: string
      security:
        - { }
  /api/$tenant-schema:
    get:
      tags:
        - API Root
      summary: Gets the JSON schema specification of the Tenant configuration
      operationId: getTenantJsonSchema
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiInfoModel'
      security:
        - { }
  /api/docs:
    get:
      tags:
        - API Root
      summary: The swagger spec document for this Link's API
      operationId: getDocs
      responses:
        '200':
          description: successful response
          content:
            text/yaml:
              schema:
                type: string
      security:
        - {}
  /api/tenant:
    get:
      tags:
        - Tenants
      summary: Search all tenants
      operationId: searchTenants
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantItem'
    post:
      tags:
        - Tenants
      summary: Create a new tenant. If id is specified, will make sure that the tenant does not arleady exist and then create the tenant with the specified id
      operationId: createTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      responses:
        '200':
          description: successful response
  /api/tenant/{id}:
    get:
      tags:
        - Tenants
      summary: Get a single tenant
      operationId: getTenant
      parameters:
        - name: id
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Tenant'
    put:
      tags:
        - Tenants
      summary: Updates an existing tenant
      operationId: updateTenant
      parameters:
        - name: id
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      responses:
        '200':
          description: successful response
    delete:
      tags:
        - Tenants
      summary: Delete a tenant
      operationId: deleteTenant
      parameters:
        - name: id
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
  /api/{tenantId}/poi:
    get:
      tags:
        - Patient Identification
      summary: Search patient lists
      operationId: searchPatientLists
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientList'
  /api/{tenantId}/poi/{id}:
    get:
      tags:
        - Patient Identification
      summary: Get one patient list
      operationId: getPatientList
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the patient list to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PatientList'
  /api/{tenantId}/poi/fhir/List:
    post:
      tags:
        - Patient Identification
      summary: Submit a FHIR List of patients to be included in report generation
      description: Measure and reporting period are derived from extensions in the List
      operationId: saveFhirList
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
      responses:
        '200':
          description: successful response
  /api/{tenantId}/poi/$query-list:
    get:
      tags:
        - Patient Identification
      summary: Query the EHR's FHIR API for a real-time patient list and persist the patient identifiers
      operationId: queryPatientList
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
  /api/{tenantId}/report/{reportId}/$send:
    post:
      tags:
        - Reports
      summary: Send/submit the specified report to the consumer/recipient
      operationId: send
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          description: The logical id of the report to submit
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
  /api/{tenantId}/report/$generate:
    post:
      tags:
        - Reports
      summary: Generate a report for given criteria
      description: Generates a report based on the specified measure and reporting period criteria. Report generation can take time to respond, as it involves querying the configured EHR for data related to the patients identified for the criteria.
      operationId: generateReport_1
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Report'
  /api/{tenantId}/report/$generateMultiMeasure:
    post:
      tags:
        - Reports
      summary: Generate a report for given criteria
      description: Generates a report based on the specified measure and reporting period criteria. Report generation can take time to respond, as it involves querying the configured EHR for data related to the patients identified for the criteria.
      operationId: generateReport_2
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
        - name: multiMeasureBundleId
          in: query
          description: The id of the multi measure package/bundle
          required: true
          schema:
            type: string
        - name: periodStart
          in: query
          description: The start date of the reporting period, formatted as a FHIR datetime
          required: true
          schema:
            type: string
        - name: periodEnd
          in: query
          description: The end date of the reporting period, formatted as a FHIR datetime
          required: true
          schema:
            type: string
        - name: regenerate
          in: query
          description: Whether to regenerate the report if a report with the same criteria already exists
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Report'
  /api/{tenantId}/report/{reportId}/aggregate:
    get:
      tags:
        - Reports
      summary: Get the aggregate measure report(s) generated the specified report id
      operationId: getReportAggregates
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          description: The id of the report
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of FHIR MeasureReports
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FHIR.MeasureReport'
  /api/{tenantId}/report/{reportId}/patientList:
    get:
      tags:
        - Reports
      summary: Get the patient list(s) used to generate the specified report id
      operationId: getReportPatientLists
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          description: The id of the report
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientList'
  /api/{tenantId}/report/{reportId}/individual/{patientMeasureReportId}:
    get:
      tags:
        - Reports
      summary: Get an individual's patient measure report generated for the specified report id
      operationId: getPatientMeasureReport
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          description: The id of the report
          required: true
          schema:
            type: string
        - name: patientMeasureReportId
          in: path
          description: The id of the patient measure report
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A individual's FHIR MeasureReport
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FHIR.MeasureReport'
  /api/measureDef:
    get:
      tags:
        - Measure Definitions
      summary: Search measure definitions loaded in Link
      operationId: searchMeasureDefinitions
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MeasureDefinition'
    put:
      tags:
        - Measure Definitions
      summary: Loads the measure bundle from the request into Link. Either the request body must have a FHIR Bundle, or the url parameter must be specified.
      operationId: createOrUpdateMeasureDef
      parameters:
        - name: url
          in: query
          description: A url reference to the measure definition bundle that should be loaded
          required: false
          schema:
            type: string
      requestBody:
        required: false
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/FHIR.Bundle'
      responses:
        '200':
          description: successful response
  /api/{tenantId}/conceptMap:
    put:
      tags:
        - Concept Maps
      summary: Creates or updates a concept map
      operationId: createOrUpdateConceptMap
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ConceptMap'
      responses:
        '200':
          description: successful response
    get:
      tags:
        - Concept Maps
      summary: Searches concept maps for the specified tenant
      operationId: searchConceptMap
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConceptMapItem'
  /api/{tenantId}/conceptMap/{id}:
    get:
      tags:
        - Concept Maps
      summary: Retrievse a specific concept map from the tenant
      operationId: getConceptMap
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the concept map to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ConceptMap'
  /api/{tenantId}/data/$expunge:
    delete:
      tags:
        - Data
      summary: Expunges/deletes any data that has passed the tenant's configured retention
      operationId: expungeData
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
  /api/{tenantId}/data/$test-fhir:
    get:
      tags:
        - Data
      summary: Tests the connectivity to the tenant's configured fhir server
      operationId: test
      parameters:
        - name: tenantId
          in: path
          description: The id of the tenant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestResponse'

components:
  schemas:
    ApiInfoModel:
      type: object
      properties:
        build:
          type: string
        version:
          type: string
    PatientId:
      type: object
      properties:
        reference:
          type: string
        identifier:
          type: string
    PatientList:
      type: object
      properties:
        id:
          type: string
        periodStart:
          type: string
        periodEnd:
          type: string
        measureId:
          type: string
        lastUpdated:
          type: string
        patients:
          type: array
          items:
            $ref: '#/components/schemas/PatientId'
    GenerateRequest:
      type: object
      properties:
        regenerate:
          type: boolean
        bundleIds:
          type: array
          items:
            type: string
        periodStart:
          type: string
        periodEnd:
          type: string
    Report:
      type: object
      properties:
        id:
          type: string
        measureId:
          type: array
          items:
            type: string
        periodStart:
          type: string
        periodEnd:
          type: string
        status:
          type: string
          enum:
            - Draft
            - Submitted
        submittedTime:
          type: string
        generatedTime:
          type: string
        version:
          type: string
        patientLists:
          type: array
          items:
            type: string
        aggregates:
          type: array
          items:
            type: string
    MeasureDefinition:
      type: object
      properties:
        id:
          type: string
        measureId:
          type: string
        bundle:
          $ref: '#/components/schemas/FHIR.Bundle'
        lastUpdated:
          type: string
    ConceptMap:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        contexts:
          type: array
          items:
            type: string
        conceptMap:
          $ref: '#/components/schemas/FHIR.ConceptMap'
    ConceptMapItem:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        contexts:
          type: array
          items:
            type: string
    TestResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
    TenantItem:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    Tenant:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        database:
          type: string
        bundling:
          $ref: '#/components/schemas/Bundling'
        scheduling:
          $ref: '#/components/schemas/Schedule'
        events:
          $ref: '#/components/schemas/Events'
        queryList:
          $ref: '#/components/schemas/QueryList'
        fhirQuery:
          $ref: '#/components/schemas/FhirQuery'
    Bundling:
      type: object
      properties:
        bundleType:
          type: string
          enum:
            - COLLECTION
            - BATCH
          default: COLLECTION
        includesCensuses:
          type: boolean
          default: true
        mergeCensuses:
          type: boolean
          default: true
        includeIndividualMeasureReports:
          type: boolean
          default: true
        promoteLineLevelResources:
          type: boolean
          default: false
        npi:
          type: string
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      properties:
        addressLine:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
    Schedule:
      type: object
      properties:
        queryPatientListCron:
          type: string
        dataRetentionCheckCron:
          type: string
        generateAndSubmitReports:
          type: array
          items:
            $ref: '#/components/schemas/GenerateReport'
    GenerateReport:
      type: object
      properties:
        cron:
          type: string
        measureIds:
          type: array
          items:
            type: string
        reportingPeriodMethod:
          type: string
          enum:
            - LastMonth
            - CurrentMonth
            - LastWeek
            - CurrentWeek
        regenerateIfExists:
          type: boolean
          default: false
    Events:
      type: object
      properties:
        BeforeMeasureResolution:
          type: array
          items:
            type: string
        AfterMeasureResolution:
          type: array
          items:
            type: string
        OnRegeneration:
          type: array
          items:
            type: string
        BeforePatientOfInterestLookup:
          type: array
          items:
            type: string
        AfterPatientOfInterestLookup:
          type: array
          items:
            type: string
        BeforePatientDataQuery:
          type: array
          items:
            type: string
        AfterPatientResourceQuery:
          type: array
          items:
            type: string
        AfterPatientDataQuery:
          type: array
          items:
            type: string
        BeforePatientDataStore:
          type: array
          items:
            type: string
        AfterPatientDataStore:
          type: array
          items:
            type: string
        BeforeMeasureEval:
          type: array
          items:
            type: string
        AfterMeasureEval:
          type: array
          items:
            type: string
        BeforeReportStore:
          type: array
          items:
            type: string
        AfterReportStore:
          type: array
          items:
            type: string
        BeforeBundling:
          type: array
          items:
            type: string
        AfterBundling:
          type: array
          items:
            type: string
    QueryList:
      type: object
      properties:
        fhirServerBase:
          type: string
        lists:
          type: array
          items:
            $ref: '#/components/schemas/EhrPatientList'
    EhrPatientList:
      type: object
      properties:
        listId:
          type: string
        measureId:
          type: array
          items:
            type: string
    FhirQuery:
      type: object
      properties:
        fhirServerBase:
          type: string
        authClass:
          type: string
        patientResourceTypes:
          type: array
          items:
            type: string
        otherResourceTypes:
          type: array
          items:
            $ref: '#/components/schemas/FhirQueryOtherResourceType'
        parallelPatients:
          type: number
        queryParameters:
          type: object
          properties:
            paramName:
              description: The name of the query parameter
              type: array
              items:
                $ref: '#/components/schemas/FhirQueryParametersResource'
        lookbackPeriod:
          type: string
        encounterBased:
          type: boolean
          default: true
    FhirQueryOtherResourceType:
      type: object
      properties:
        resourceType:
          type: string
        supportsSearch:
          type: boolean
          default: false
        countPerSearch:
          type: number
          default: 100
    FhirQueryParametersResource:
      type: object
      properties:
        resourceType:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/FhirQueryParametersResourceParameter'
    FhirQueryParametersResourceParameter:
      type: object
      properties:
        name:
          type: string
        singleParam:
          type: boolean
        values:
          type: array
          items:
            type: string
    FHIR.ConceptMap:
      type: object
    FHIR.MeasureReport:
      type: object
    FHIR.Bundle:
      type: object